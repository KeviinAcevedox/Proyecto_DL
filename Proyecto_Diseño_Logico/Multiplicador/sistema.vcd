$date
	Mon Nov  8 05:45:28 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_sistema $end
$var wire 1 ! Ready $end
$var wire 17 " Producto [16:0] $end
$var reg 1 # Clock $end
$var reg 8 $ Multiplicador [7:0] $end
$var reg 8 % Multiplicando [7:0] $end
$var reg 1 & Reset $end
$var reg 1 ' Start $end
$scope module DUT $end
$var wire 1 # Clock $end
$var wire 8 ( Multiplicador [7:0] $end
$var wire 8 ) Multiplicando [7:0] $end
$var wire 1 & Reset $end
$var wire 1 ' Start $end
$var wire 1 * Zero $end
$var wire 1 + Shift_regs $end
$var wire 1 ! Ready $end
$var wire 1 , Q0 $end
$var wire 17 - Producto [16:0] $end
$var wire 1 . Load_regs $end
$var wire 1 / Decr_P $end
$var wire 1 0 Add_regs $end
$scope module TheController $end
$var wire 1 # Clock $end
$var wire 1 & Reset $end
$var wire 1 ' Start $end
$var wire 1 * Zero $end
$var wire 1 , Q0 $end
$var reg 1 0 Add_regs $end
$var reg 3 1 Current_State [2:0] $end
$var reg 1 / Decr_P $end
$var reg 1 . Load_regs $end
$var reg 3 2 Next_State [2:0] $end
$var reg 1 ! Ready $end
$var reg 1 + Shift_regs $end
$upscope $end
$scope module TheDatapath $end
$var wire 1 0 Add_regs $end
$var wire 1 / Decr_P $end
$var wire 1 . Load_regs $end
$var wire 8 3 Multiplicador [7:0] $end
$var wire 8 4 Multiplicando [7:0] $end
$var wire 1 5 REGA_LSB $end
$var wire 1 + Shift_regs $end
$var wire 1 # clk $end
$var wire 1 6 rst $end
$var wire 1 7 Suma_MSB $end
$var wire 8 8 OUT_SUMADOR_IN_REGA [7:0] $end
$var wire 8 9 OUT_REGQ [7:0] $end
$var wire 8 : OUT_REGB_IN_SUMA [7:0] $end
$var wire 8 ; OUT_REGA_IN_SUMA [7:0] $end
$var wire 4 < Contador [3:0] $end
$var reg 2 = Control [1:0] $end
$var reg 4 > PaseAControl [3:0] $end
$var reg 17 ? Producto [16:0] $end
$var reg 1 , Q_Cero $end
$var reg 1 * Zero $end
$scope module REGISTRO_A $end
$var wire 2 @ Control [1:0] $end
$var wire 8 A EntradaParalela [7:0] $end
$var wire 1 # clk $end
$var wire 1 6 rst $end
$var wire 8 B ResultadoSuma [7:0] $end
$var wire 1 7 InHaciaDerecha $end
$var reg 8 C Salida [7:0] $end
$var reg 8 D next_state [7:0] $end
$var reg 8 E state [7:0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module REGISTRO_B $end
$var wire 2 F Control [1:0] $end
$var wire 8 G EntradaParalela [7:0] $end
$var wire 1 H InHaciaDerecha $end
$var wire 8 I ResultadoSuma [7:0] $end
$var wire 1 # clk $end
$var wire 1 6 rst $end
$var reg 8 J Salida [7:0] $end
$var reg 8 K next_state [7:0] $end
$var reg 8 L state [7:0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module REGISTRO_P $end
$var wire 2 M Control [1:0] $end
$var wire 4 N EntradaParalela [3:0] $end
$var wire 1 O InHaciaDerecha $end
$var wire 4 P ResultadoSuma [3:0] $end
$var wire 1 # clk $end
$var wire 1 6 rst $end
$var reg 4 Q Salida [3:0] $end
$var reg 4 R next_state [3:0] $end
$var reg 4 S state [3:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module REGISTRO_Q $end
$var wire 2 T Control [1:0] $end
$var wire 8 U EntradaParalela [7:0] $end
$var wire 1 5 InHaciaDerecha $end
$var wire 1 # clk $end
$var wire 1 6 rst $end
$var wire 8 V ResultadoSuma [7:0] $end
$var reg 8 W Salida [7:0] $end
$var reg 8 X next_state [7:0] $end
$var reg 8 Y state [7:0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module SUMA $end
$var wire 8 Z Control [7:0] $end
$var wire 8 [ a [7:0] $end
$var wire 8 \ b [7:0] $end
$var wire 1 ] cin $end
$var reg 1 7 cout $end
$var reg 8 ^ sum [7:0] $end
$var reg 9 _ sumita [8:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx _
bx ^
0]
bx \
bx [
b0xx Z
bx Y
bx X
bx W
bx V
b10111 U
bx T
bx S
bx R
bx Q
b0 P
0O
b1000 N
bx M
bx L
b11010111 K
bx J
b0 I
0H
b11010111 G
b11 F
bx E
bx D
bx C
bx B
b0 A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
x7
z6
z5
b11010111 4
b10111 3
b0 2
bx 1
x0
x/
x.
bx -
x,
x+
x*
b11010111 )
b10111 (
0'
0&
b11010111 %
b10111 $
0#
bx "
x!
$end
#5000
b0 >
0!
0/
00
0+
0.
b11010111 :
b11010111 J
b11010111 \
b0 1
b11010111 L
1#
#10000
b1 2
1'
1&
0#
#15000
b0 D
b1000 R
b10111 X
b11 Z
b11 =
b11 @
b11 M
b11 T
b1 >
1.
b10 2
b1 1
1#
#20000
0#
#25000
b0 >
07
b11010111 _
0*
1,
bx0000000000010111 "
bx0000000000010111 -
bx0000000000010111 ?
0.
b11 2
b0 ;
b0 C
b0 [
b10111 9
b10111 V
b10111 W
b1000 <
b1000 Q
b10 1
b0 E
b10111 Y
b1000 S
1#
0'
#30000
0#
#35000
b11010111 8
b11010111 B
b11010111 ^
b11010111 D
b0 Z
b0 =
b0 @
b0 M
b0 T
b1000 >
10
b100 2
b11 1
1#
#40000
0#
#45000
bz0001011 X
b11101011 D
b1 Z
b1 =
b1 @
b1 M
b1 T
b100 >
17
b10101110 8
b10101110 B
b10101110 ^
b110101110 _
1+
00
b101 2
b11010111 ;
b11010111 C
b11010111 [
b100 1
b11010111 E
1#
#50000
0#
#55000
b111 R
b111000010 _
b10 Z
b10 =
b10 @
b10 M
b10 T
b10 >
bz0001011 9
bz0001011 V
bz0001011 W
bz0001011 X
b11101011 ;
b11101011 C
b11101011 [
b11101011 D
1/
0+
b110 2
bz0001011 Y
b11101011 E
b101 1
1#
#60000
0#
#65000
b0 >
b111101011z0001011 "
b111101011z0001011 -
b111101011z0001011 ?
0/
b10 2
b111 <
b111 Q
b110 R
b110 1
b111 S
1#
#70000
0#
#75000
b110 <
b110 Q
b101 R
b11 2
b110 S
b10 1
1#
#80000
0#
#85000
b11000010 8
b11000010 B
b11000010 ^
b11000010 D
b0 Z
b0 =
b0 @
b0 M
b0 T
b1000 >
10
b100 2
b101 <
b101 Q
b101 R
b11 1
b101 S
1#
#90000
0#
#95000
b11100001 D
bz000101 X
b110011001 _
b1 Z
b1 =
b1 @
b1 M
b1 T
b100 >
b11000010 ;
b11000010 C
b11000010 [
1+
00
b101 2
b11000010 E
b100 1
1#
#100000
0#
#105000
b100 R
b10 Z
b10 =
b10 @
b10 M
b10 T
b10 >
b110111000 _
1/
0+
b110 2
b11100001 ;
b11100001 C
b11100001 [
b11100001 D
bz000101 9
bz000101 V
bz000101 W
bz000101 X
b101 1
b11100001 E
bz000101 Y
1#
#110000
0#
#115000
b111100001zz000101 "
b111100001zz000101 -
b111100001zz000101 ?
b0 >
b100 <
b100 Q
b11 R
0/
b10 2
b100 S
b110 1
1#
#120000
0#
#125000
b11 2
b11 <
b11 Q
b10 R
b10 1
b11 S
1#
#130000
0#
#135000
b10111000 8
b10111000 B
b10111000 ^
b10111000 D
b0 Z
b0 =
b0 @
b0 M
b0 T
b1000 >
b10 <
b10 Q
b10 R
10
b100 2
b10 S
b11 1
1#
#140000
0#
#145000
bz00010 X
b11011100 D
b1 Z
b1 =
b1 @
b1 M
b1 T
b100 >
b10001111 8
b10001111 B
b10001111 ^
b110001111 _
1+
00
b101 2
b10111000 ;
b10111000 C
b10111000 [
b100 1
b10111000 E
1#
#150000
0#
#155000
b1 R
b110110011 _
b10 Z
b10 =
b10 @
b10 M
b10 T
b10 >
bz00010 9
bz00010 V
bz00010 W
bz00010 X
b11011100 ;
b11011100 C
b11011100 [
b11011100 D
1/
0+
b110 2
bz00010 Y
b11011100 E
b101 1
1#
#160000
0#
#165000
b0 >
0,
b111011100zzz00010 "
b111011100zzz00010 -
b111011100zzz00010 ?
0/
b10 2
b1 <
b1 Q
b0 R
b110 1
b1 S
1#
#170000
0#
#175000
1*
b0 <
b0 Q
b1111 R
b100 2
b0 S
b10 1
1#
#180000
0#
#185000
b11101110 D
bz0001 X
b1 Z
b1 =
b1 @
b1 M
b1 T
b100 >
0*
1+
b101 2
b1111 <
b1111 Q
b1111 R
b100 1
b1111 S
1#
#190000
0#
#195000
b1110 R
b111000101 _
b10 Z
b10 =
b10 @
b10 M
b10 T
b10 >
bz0001 9
bz0001 V
bz0001 W
bz0001 X
b11101110 ;
b11101110 C
b11101110 [
b11101110 D
1/
0+
b110 2
bz0001 Y
b11101110 E
b101 1
1#
#200000
0#
#205000
b0 >
1,
b111101110zzzz0001 "
b111101110zzzz0001 -
b111101110zzzz0001 ?
0/
b10 2
b1110 <
b1110 Q
b1101 R
b110 1
b1110 S
1#
#210000
0#
#215000
b1101 <
b1101 Q
b1100 R
b11 2
b1101 S
b10 1
1#
#220000
0#
#225000
b11000101 8
b11000101 B
b11000101 ^
b11000101 D
b0 Z
b0 =
b0 @
b0 M
b0 T
b1000 >
10
b100 2
b1100 <
b1100 Q
b1100 R
b11 1
b1100 S
1#
